<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Vertile</title>
  <subtitle>Nathan's Notes</subtitle>
  <id>http://nathan.vertile.com/blog</id>
  <link href="http://nathan.vertile.com/blog"/>
  <link href="http://nathan.vertile.com/blog/blog/feed.xml" rel="self"/>
  <updated>2016-07-28T22:30:00-07:00</updated>
  <author>
    <name>Nathan Tsoi</name>
  </author>
  <entry>
    <title>BetaFlight Kiss Flight Controller</title>
    <link rel="alternate" href="http://nathan.vertile.com/blog/2016/07/29/betaflight-kiss-flight-controller/"/>
    <id>http://nathan.vertile.com/blog/2016/07/29/betaflight-kiss-flight-controller/</id>
    <published>2016-07-28T22:30:00-07:00</published>
    <updated>2016-08-05T22:20:31-07:00</updated>
    <author>
      <name>Nathan Tsoi</name>
    </author>
    <content type="html">&lt;p&gt;This guide will show you how to install BetaFlight on your Kiss FC.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-kissfc-front-JPG" href="/assets/images/blog/kissfc/front.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/front_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-kissfc-back-JPG" href="/assets/images/blog/kissfc/back.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/back_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When I told &lt;a href="http://flyduino.net"&gt;flyduino.net&lt;/a&gt; we were interested in supporting the KissFC in BetaFlight, the were kind enough to mail me one. At the same time, I wasl talking to &lt;a href="https://www.patreon.com/thedroneracingengineer"&gt;Joshua&lt;/a&gt; and he also send me a KissFC! Thx guys. Y&amp;#39;all are the best. I&amp;#39;m going to pass one of the KissFC&amp;#39;s on, so we have some more developer&amp;#39;s with one in their arsenal.&lt;/p&gt;

&lt;h2 id="pinout"&gt;Pinout&lt;/h2&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.50717703349282%;'&gt;&lt;a id="assets-images-blog-kissfc-pinout-d-c-d-png" href="/assets/images/blog/kissfc/pinout-5d903c7d.png" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/pinout-5d903c7d.png' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 90.34175334323923%;'&gt;&lt;a id="assets-images-blog-kissfc-schematic-bd-png" href="/assets/images/blog/kissfc/schematic-12673bd7.png" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/schematic-12673bd7.png' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="ppm"&gt;PPM&lt;/h3&gt;

&lt;p&gt;Wire your PPM receiver like this.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Green -&amp;gt; Signal
Red -&amp;gt; 5v
Blue -&amp;gt; GND
&lt;/code&gt;&lt;/pre&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-kissfc-DSC-JPG" href="/assets/images/blog/kissfc/DSC03616.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/DSC03616_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then enable PPM in the BetaFlight Configurator on the &lt;code&gt;Configuration&lt;/code&gt; tab under &lt;code&gt;Receiver Mode&lt;/code&gt;.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 60.2112676056338%;'&gt;&lt;a id="assets-images-blog-kissfc-serialrx-ppm-a-png" href="/assets/images/blog/kissfc/serialrx-ppm-054a7772.png" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/serialrx-ppm-054a7772.png' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hit &lt;code&gt;save and reboot&lt;/code&gt; and check that your receiver is working in the &lt;code&gt;Receiver&lt;/code&gt; tab.&lt;/p&gt;

&lt;h3 id="serial-rx"&gt;Serial RX&lt;/h3&gt;

&lt;p&gt;Wire your Serial RX receiver like this.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Green -&amp;gt; Signal
Red -&amp;gt; 5v
Blue -&amp;gt; GND
&lt;/code&gt;&lt;/pre&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-kissfc-DSC-JPG" href="/assets/images/blog/kissfc/DSC03615.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/DSC03615_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then enable Serial RX on UART1:&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 60.2112676056338%;'&gt;&lt;a id="assets-images-blog-kissfc-serialrx-uart-bcf-e-b-png" href="/assets/images/blog/kissfc/serialrx-uart1-bcf43e5b.png" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/serialrx-uart1-bcf43e5b.png' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hit &lt;code&gt;save and reboot&lt;/code&gt;, then enable &lt;code&gt;Serial RX&lt;/code&gt; and select the correct protocol, I&amp;#39;m using &lt;code&gt;IBUS&lt;/code&gt;:&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 60.2112676056338%;'&gt;&lt;a id="assets-images-blog-kissfc-serialrx-ibus-fe-png" href="/assets/images/blog/kissfc/serialrx-ibus-7544fe34.png" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/serialrx-ibus-7544fe34.png' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hit &lt;code&gt;save and reboot&lt;/code&gt; and check that your receiver is working in the &lt;code&gt;Receiver&lt;/code&gt; tab.&lt;/p&gt;

&lt;h2 id="flashing"&gt;Flashing&lt;/h2&gt;

&lt;p&gt;First, download the latest &lt;a href="https://github.com/betaflight/betaflight/releases/latest"&gt;BetaFlight release&lt;/a&gt; and the &lt;a href="http://www.st.com/content/st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-programmers/stsw-stm32080.html"&gt;STM32 DFU Flash tool&lt;/a&gt;. The DFU download link is at the bottom of the page. It may be possible to flash the BetaFlight hex with the BetaFlight configurator, but I couldn&amp;#39;t get it to work. Instead, I&amp;#39;ll use the DFU flash tool for the first flash. After that, the BetaFligth configurator worked fine for me.&lt;/p&gt;

&lt;p&gt;Install the DFU software by unzipping the download and following the walk through. Launch the DFU flash tool and you should see:&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 100.35460992907801%;'&gt;&lt;a id="assets-images-blog-kissfc-dfu-ed-a-png" href="/assets/images/blog/kissfc/dfu-ed80511a.png" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/dfu-ed80511a.png' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Under &amp;quot;Upload Action&amp;quot; click &amp;quot;Choose&amp;quot; and find the BetaFlight &lt;code&gt;KISSFC&lt;/code&gt; .hex file you downloaded. You&amp;#39;ll need to change the allowable file type to &lt;code&gt;All Files&lt;/code&gt;&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 86.21745788667687%;'&gt;&lt;a id="assets-images-blog-kissfc-dfu-file-type-e-b-png" href="/assets/images/blog/kissfc/dfu-file-type-223e464b.png" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/dfu-file-type-223e464b.png' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Plug in the board while holding the boot button. Click upload, accept the warning and you should see:&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 101.06571936056838%;'&gt;&lt;a id="assets-images-blog-kissfc-dfu-uploaded-a-b-f-png" href="/assets/images/blog/kissfc/dfu-uploaded-6a16b6f1.png" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/dfu-uploaded-6a16b6f1.png' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ok, even though the flashing worked, we&amp;#39;re not done yet. You&amp;#39;ll need to open the BetaFlight configurator and flash the KISSFC as you would normally. I&amp;#39;ll choose &lt;code&gt;Full chip erase&lt;/code&gt; as well, just to be safe.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 97.09507042253522%;'&gt;&lt;a id="assets-images-blog-kissfc-flash-normally-d-d-png" href="/assets/images/blog/kissfc/flash-normally-4d88563d.png" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/flash-normally-4d88563d.png' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When you&amp;#39;re done, the board should reboot and you can connect.&lt;/p&gt;

&lt;h3 id="swd"&gt;SWD&lt;/h3&gt;

&lt;p&gt;SWD is the debugging interface which is used for stepping through instructions while developing software for the flight controller.&lt;/p&gt;

&lt;p&gt;Debugging pins are:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;AUX1 (PA13) -&amp;gt; SWDIO
AUX2 (PA14) -&amp;gt; SWDCLK
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here&amp;#39;s how to wire it:&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 75.0%;'&gt;&lt;a id="assets-images-blog-kissfc-IMG-a-e-ebbd-jpg" href="/assets/images/blog/kissfc/IMG_20160804_222400-a6e3ebbd.jpg" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/kissfc/IMG_20160804_222400_prev.jpg' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that pwm inputs matching these pins must be disabled. Change:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;target.h&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#define USABLE_TIMER_CHANNEL_COUNT 10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;target.c&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;TIM2,&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;IO_TAG(PB11),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;TIM_Channel_4,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;TIM2_IRQn,&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="err"&gt;0,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;IOCFG_AF_PP,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;GPIO_AF_1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;TIM4,&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;IO_TAG(PA13),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;TIM_Channel_2,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;TIM4_IRQn,&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="err"&gt;0,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;IOCFG_AF_PP,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;GPIO_AF_10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;TIM8,&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;IO_TAG(PA14),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;TIM_Channel_3,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;TIM8_CC_IRQn,&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="err"&gt;0,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;IOCFG_AF_PP,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;GPIO_AF_5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;};&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>J-Link Getting Started Guide</title>
    <link rel="alternate" href="http://nathan.vertile.com/blog/2016/07/25/j-link-getting-started-guide/"/>
    <id>http://nathan.vertile.com/blog/2016/07/25/j-link-getting-started-guide/</id>
    <published>2016-07-24T20:20:00-07:00</published>
    <updated>2016-07-25T22:17:45-07:00</updated>
    <author>
      <name>Nathan Tsoi</name>
    </author>
    <content type="html">&lt;p&gt;These are my notes on J-link debugging, mostly for ARM.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-jlink-DSC-JPG" href="/assets/images/blog/jlink/DSC03526.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/jlink/DSC03526_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="software"&gt;Software&lt;/h2&gt;

&lt;p&gt;Head over to the &lt;a href="https://www.segger.com/downloads/jlink"&gt;jlink downloads&lt;/a&gt; page to grab the latest software for your platform.&lt;/p&gt;

&lt;p&gt;Install the package then connect your debugger.&lt;/p&gt;

&lt;h2 id="pinout"&gt;Pinout&lt;/h2&gt;

&lt;div class='ratio-box-resizer img-quarter-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 78.01418439716312%;'&gt;&lt;a id="assets-images-blog-jlink-pin-jlink-b-afde-png" href="/assets/images/blog/jlink/20pin-jlink-7b2afde5.png" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/jlink/20pin-jlink-7b2afde5.png' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I just used some &lt;a href="http://www.banggood.com/3Pcs-40P-20cm-Female-to-Female-Dupont-Jumper-Jump-Cable-Wire-For-Arduino-p-1033590.html?p=1G09211226617201502J"&gt;Dupont jumper cables&lt;/a&gt; to connect the SWD lines. You could get one of &lt;a href="http://www.banggood.com/V8-All-ARM-JTAG-Adapter-Converter-For-TQ2440-MINI2440-Neu-J-link-Emulator-p-1038713.html?p=1G09211226617201502J"&gt;these breakout boards&lt;/a&gt;, but that seems unnecessary.&lt;/p&gt;

&lt;p&gt;You would connect the Dupont cables like this. Note that when using the grey 20 pin Jtag cable, the pinout should be viewed from the &amp;quot;back&amp;quot;.&lt;/p&gt;

&lt;h2 id="swd"&gt;SWD&lt;/h2&gt;

&lt;p&gt;Here is an example SWD connection. I check that my J-Link was sending 3.3v on the VCC pin, and I think this is standard, but if you want to be sure, double check it before connecting.&lt;/p&gt;

&lt;p&gt;Where:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;RED &amp;lt;-&amp;gt; VCC
YELLOW &amp;lt;-&amp;gt; GND
BLUE &amp;lt;-&amp;gt; SWDIO
GREEN &amp;lt;-&amp;gt; SWDCLK
ORANGE &amp;lt;-&amp;gt; RESET
&lt;/code&gt;&lt;/pre&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-jlink-DSC-JPG" href="/assets/images/blog/jlink/DSC03524.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/jlink/DSC03524_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-jlink-DSC-JPG" href="/assets/images/blog/jlink/DSC03525.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/jlink/DSC03525_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is an example connection to the &lt;a href="/blog/2016/07/09/flysky-i6-radio-setup-and-hacking-guide/"&gt;FlySky FS-i6&lt;/a&gt;.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-jlink-DSC-JPG" href="/assets/images/blog/jlink/DSC03530.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/jlink/DSC03530_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="flashing"&gt;Flashing&lt;/h2&gt;

&lt;p&gt;Find your device in &lt;a href="https://www.segger.com/jlink_supported_devices.html"&gt;the device list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you know the device, run &lt;code&gt;JLinkExe&lt;/code&gt; from your terminal. These examples are from my mac, using the MKL16Z64VLH4 I was working with in my &lt;a href="/blog/2016/07/09/flysky-i6-radio-setup-and-hacking-guide/"&gt;FlySky FS-i6 hacking guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Create a file, it doesn&amp;#39;t matter what it&amp;#39;s called. I&amp;#39;ll call mine &lt;code&gt;dump.jtag&lt;/code&gt; and put this in it:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;si 1
speed 4000
device MKL16Z64XXX4
r
h
savebin fsi6.bin, 0x0, 0x10000
exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that the syntax for savebin is &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;start addr&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;. Our target has 64kb of flash.&lt;/p&gt;

&lt;p&gt;Then run:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;JLinkExe -CommanderScript dump.jtag
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you should have a file called fsi6.bin&lt;/p&gt;

&lt;p&gt;You can run &lt;code&gt;xxd fsi6.bin &amp;gt; fsi6.txt&lt;/code&gt; to see a readable output of the binary.&lt;/p&gt;

&lt;p&gt;Make any edits and run &lt;code&gt;xxd -r fsi6.txt &amp;gt; modified-fsi6.bin&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;Then create another file called &lt;code&gt;loadbin.jlink&lt;/code&gt; with the contents:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;si 1
speed 4000
device MKL16Z64XXX4
r
h
loadbin modified-fsi6.bin
exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To just connect to the target, run:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;JLinkExe -device MKL16Z64xxx4
si 1
speed 4000
r
h
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You&amp;#39;ll see:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;› JLinkExe -device MKL16Z64xxx4
SEGGER J-Link Commander V6.00 (Compiled Jul 22 2016 19:27:23)
DLL version V6.00, compiled Jul 22 2016 19:27:17

Connecting to J-Link via USB...O.K.
Firmware: J-Link ARM V8 compiled Nov 28 2014 13:44:46
Hardware version: V8.00
S/N: 304439649
License(s): RDI,FlashDL,FlashBP,JFlash,GDBFULL
VTref = 3.280V


Type "connect" to establish a target connection, '?' for help
J-Link&amp;gt;si 1
Selecting SWD as current target interface.
J-Link&amp;gt;speed 4000
Selecting 4000 kHz as target interface speed
J-Link&amp;gt;r
Target connection not established yet but required for command.
Device "MKL16Z64XXX4" selected.


Found SWD-DP with ID 0x0BC11477
Found SWD-DP with ID 0x0BC11477
AP-IDR: 0x04770031, Type: AHB-AP
Found Cortex-M0 r0p0, Little endian.
FPUnit: 2 code (BP) slots and 0 literal slots
CoreSight components:
ROMTbl 0 @ F0002000
ROMTbl 0 [0]: FFFFE000, CID: B105900D, PID: 000BB932 MTB-M0+
ROMTbl 0 [1]: FFFFF000, CID: B105900D, PID: 0008E000 MTBDWT
ROMTbl 0 [2]: F00FD000, CID: B105100D, PID: 000BB4C0 ROM Table
ROMTbl 1 @ E00FF000
ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS
ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT
ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB
Cortex-M0 identified.
Reset delay: 0 ms
Reset type NORMAL: Resets core &amp;amp; peripherals via SYSRESETREQ &amp;amp; VECTRESET bit.
J-Link&amp;gt;h
PC = 000001A0, CycleCnt = 00000000
R0 = 80000000, R1 = 40000000, R2 = 00000004, R3 = 0000FF00
R4 = 40076000, R5 = 40008100, R6 = 00000001, R7 = 200015F0
R8 = 3FBFDFDF, R9 = FF5EFFBF, R10= 0000F3D4, R11= 0000F3D4
R12= BFFBFEFF
SP(R13)= 20001460, MSP= 20001460, PSP= FF4FEFF8, R14(LR) = 0000A311
XPSR = A1000000: APSR = NzCvq, EPSR = 01000000, IPSR = 000 (NoException)
CFBP = 00000000, CONTROL = 00, FAULTMASK = 00, BASEPRI = 00, PRIMASK = 00
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Eachine EV800 Review</title>
    <link rel="alternate" href="http://nathan.vertile.com/blog/2016/07/10/eachine-ev800-review/"/>
    <id>http://nathan.vertile.com/blog/2016/07/10/eachine-ev800-review/</id>
    <published>2016-07-09T23:15:00-07:00</published>
    <updated>2016-07-09T23:15:19-07:00</updated>
    <author>
      <name>Nathan Tsoi</name>
    </author>
    <content type="html"></content>
  </entry>
  <entry>
    <title>Eachine Goggles One Review</title>
    <link rel="alternate" href="http://nathan.vertile.com/blog/2016/07/10/eachine-goggles-one-review/"/>
    <id>http://nathan.vertile.com/blog/2016/07/10/eachine-goggles-one-review/</id>
    <published>2016-07-09T22:46:00-07:00</published>
    <updated>2016-07-09T22:46:56-07:00</updated>
    <author>
      <name>Nathan Tsoi</name>
    </author>
    <content type="html"></content>
  </entry>
  <entry>
    <title>FlySky i6 Radio Setup and Hacking Guide</title>
    <link rel="alternate" href="http://nathan.vertile.com/blog/2016/07/09/flysky-i6-radio-setup-and-hacking-guide/"/>
    <id>http://nathan.vertile.com/blog/2016/07/09/flysky-i6-radio-setup-and-hacking-guide/</id>
    <published>2016-07-08T22:00:00-07:00</published>
    <updated>2016-07-25T22:16:55-07:00</updated>
    <author>
      <name>Nathan Tsoi</name>
    </author>
    <content type="html">&lt;p&gt;This is my unboxing, review and hacking guide for the &lt;a href="http://www.banggood.com/FlySky-FS-i6-2_4G-6CH-AFHDS-RC-Transmitter-With-FS-iA6B-Receiver-p-983537.html?p=1G09211226617201502J"&gt;Flysky FS-i6&lt;/a&gt; 2.4ghz radio transmitter.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03245.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03245_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I started this project thinking I could easily use the &lt;a href="http://www.banggood.com/2_4G-CC2500-A7105-Flysky-Frsky-Devo-DSM2-Multiprotocol-TX-Module-With-Antenna-p-1048377.html?p=1G09211226617201502J"&gt;4-in-1 DIY transmitter module&lt;/a&gt; in the radio, but this turned out to not be the case. Instead, I&amp;#39;ve start working on porting OpenTX with serial support for the &lt;a href="http://www.banggood.com/2_4G-CC2500-A7105-Flysky-Frsky-Devo-DSM2-Multiprotocol-TX-Module-With-Antenna-p-1048377.html?p=1G09211226617201502J"&gt;4-in-1 DIY transmitter module&lt;/a&gt;. Devs, help me out here! &lt;a href="https://github.com/nathantsoi/opentx/tree/target/fs-i6"&gt;https://github.com/nathantsoi/opentx/tree/target/fs-i6&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="unboxing"&gt;Unboxing&lt;/h2&gt;

&lt;p&gt;Here&amp;#39;s the box.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03241.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03241_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Inside is the cool protective plastic thing.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03242.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03242_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Get the version that comes with the iA6B receiver, which is PPM enabled.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03245.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03245_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Side-by-side with the Turnigy i6&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03247.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03247_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="review"&gt;Review&lt;/h2&gt;

&lt;p&gt;The FlySky i6 is the ultimate beginner radio. We can make it even better by adding a DIY 4-in-1 module and re-painting it to look awesome.&lt;/p&gt;

&lt;h3 id="features"&gt;Features&lt;/h3&gt;

&lt;p&gt;Switches and Knobs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;3x 2 position switch&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1x 3 position switch&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2x Knobs&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Diversity TX and RX&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PPM or iBUS options&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Nice Smooth Gimbals&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No LIPO support without modification.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="ia6b-rx"&gt;iA6B RX&lt;/h3&gt;

&lt;p&gt;Pinout:&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 75.0%;'&gt;&lt;a id="assets-images-blog-fs-i-px-FlySky-IA-B-pinout-f-eed-f-jpg" href="/assets/images/blog/fs_i6/500px-FlySky_IA6B_pinout-f89eed4f.jpg" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/500px-FlySky_IA6B_pinout-f89eed4f.jpg' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="teardown"&gt;Teardown&lt;/h2&gt;

&lt;p&gt;Remove the 4 screws on the back.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03249.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03249_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Crack it open. The antenna stub will probably fall out, no worries, just hold onto it.&lt;/p&gt;

&lt;p&gt;Disconnect the bottom two plugs from the mainboard and separate the front and back case.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03250.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03250_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Separate the front and back.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03253.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03253_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note the two antennas for the diversity transmitter and &lt;code&gt;MKL16Z64VLH4&lt;/code&gt; Freescale Kinetis microcontroller &lt;a href="http://cache.freescale.com/files/microcontrollers/doc/data_sheet/KL16P64M48SF5.pdf"&gt;Datasheet is here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is a populated SWD port on the right for easy debugging.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03255.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03255_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Removing the 4 outer screws on the display module we can pull the display up.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03256.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03256_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Disconnect all the plugs (antennas too, unlike the photo).&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03368.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03368_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And the board can be removed.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03369.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03369_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The LCD can be removed by pulling the lower clip down slightly and lifting the LCD.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03374.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03374_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The display cable shows the only markings on the display &lt;code&gt;HSG12864-35&lt;/code&gt;.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03375.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03375_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The backlight is soldered in place, but we can see the other side of the PCB by pulling it up gently.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03380.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03380_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Removing the radio transmitter, we can see:&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03439.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03439_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.49022801302932%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03440.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03440_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="firmware"&gt;Firmware&lt;/h2&gt;

&lt;p&gt;I have dumped the version of the firmware shipped with my controller here. Use &lt;code&gt;xxd -r [filename]&lt;/code&gt; to restore it to a flash-able &lt;code&gt;bin&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gist.github.com/nathantsoi/ab352234dedfaf0451c5faa50bfeb9a4"&gt;https://gist.github.com/nathantsoi/ab352234dedfaf0451c5faa50bfeb9a4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Restore it as described here in my &lt;a href="/blog/2016/07/25/j-link-getting-started-guide/"&gt;J-Link article&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="diy-tx-module"&gt;DIY TX Module&lt;/h2&gt;

&lt;p&gt;WARNING! DRAGONS AHEAD READ THIS BEFORE PURCHASING OR INSTALLING THE DIY MODULE!&lt;/p&gt;

&lt;p&gt;When I started this project, I hoped to install this &lt;a href="http://www.banggood.com/2_4G-CC2500-A7105-Flysky-Frsky-Devo-DSM2-Multiprotocol-TX-Module-With-Antenna-p-1048377.html?p=1G09211226617201502J"&gt;DIY transmitter module&lt;/a&gt; which allows you to use the radio with basically any other protocol including FrSky and Spektrum. However, to do this I also wanted to disable the internal module, which turned out to be very difficult. Even after isolating the internal radio module from the power line, the module was still getting power from some other pins.&lt;/p&gt;

&lt;p&gt;I then tried removing the build-in wireless module entirely, but that didn&amp;#39;t work either. Now that the module is out, my radio refuses to boot. So, this project is on hold while I write some custom firmware for the radio.&lt;/p&gt;

&lt;p&gt;Consider the following a guide on how NOT to install the DIY module. While you may be able to get it to work, the range could be greatly reduced because of interference from the internal module. Therefore I suggest you buy a &lt;a href="http://www.banggood.com/Wholesale-FlySky-Upgrade-FS-TH9X-FS-TH9XB-2_4G-9CH-RC-Remote-Control-Transmitter-Mode-2-p-47904.html?p=1G09211226617201502J"&gt;FlySky 9x&lt;/a&gt; instead, if you want to use the DIY TX module.&lt;/p&gt;

&lt;p&gt;WARNING! Please read the above note, if you did not already.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll be using this &lt;a href="http://www.banggood.com/2_4G-CC2500-A7105-Flysky-Frsky-Devo-DSM2-Multiprotocol-TX-Module-With-Antenna-p-1048377.html?p=1G09211226617201502J"&gt;DIY transmitter module&lt;/a&gt; which allows you to use the radio with basically any other protocol including FrSky and Spektrum.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03258.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03258_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03259.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03259_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03260.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03260_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03261.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03261_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&amp;#39;ll install the module here.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03263.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03263_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Start by drilling a small hole for the knob. I held the module in place and used a sharp screwdriver to mark the case with a scratch.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03264.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03264_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I then did the same thing on the second hole then test fit the module. I removed the antenna holder temporarily.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03266.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03266_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Re-routed the antenna into the handle by cutting a v shape in the little tabs. I used wire clippers for this.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03343.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03343_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then I secured the antenna with a small dab of hot glue.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03347.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03347_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Solder some leads onto the module.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Green: PPM
Black: GROUND
Red: V+
&lt;/code&gt;&lt;/pre&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03320.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03320_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And solder on the ISP header so you can re-program the module later without removing it. I soldered it on the back side, so be aware that the pins will be flipped from the normal ISP header. I give the pinouts below in the &lt;a href="#4-in-1-diy-tx-module-programming"&gt;4-in-1 DIY TX Module Programming&lt;/a&gt; section.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03356.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03356_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To install the new antenna&amp;#39;s SMA adapter, I cut the old antenna holder on both sides then used a reamer to open up the hole a bit.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03346.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03346_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03349.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03349_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once you&amp;#39;ve got that opened enough, the SMA adapter should fit nicely and can be secured with some hot glue.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03353.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03353_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I installed the lock washer and nut. They don&amp;#39;t do anything except make it look a little nicer.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03352.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03352_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then I installed the module like so, using an extra screw in the existing post to hold it in place.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03361.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03361_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, here&amp;#39;s the plan. Normally, when you power on the transmitter, the radio module (silver thing in the photo below) receives power as well. This is normally fine, however with our new module, we&amp;#39;ll want to disable the internal radio while the DIY module is turned on.&lt;/p&gt;

&lt;p&gt;For this, I&amp;#39;m going to use a switch. You could just cut the trace as described below, to disable the internal module entirely, which would be fine, but the internal module should be a few MS faster than the DIY module, since the internal module is directly connected to the main MCU and does not need PPM conversion like the module. Therefore, it is slightly better to use the internal module for FlySky receivers, even though the DIY module does support FlySky RX.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03397.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03397_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&amp;#39;ve installed mine in the front, but my switch was small and this was rather hard to do. I suggest you get a larger switch and install it in the back.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03398.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03398_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03400.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03400_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To use the switch, we&amp;#39;ll need to cut a trace on the PCB. To figure out which one, checkout this pinout for the radio module. As this module does not have the standard &lt;a href="http://www.banggood.com/A7105-Wireless-RF-2_4GHz-Transceiver-Module-3_3V-Power-Supply-Module-p-909404.html?p=1G09211226617201502J"&gt;A7105&lt;/a&gt; module, I reverse engineered the one on the board.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 87.76508972267537%;'&gt;&lt;a id="assets-images-blog-fs-i-fs-i-pinout-fb-fe-jpg" href="/assets/images/blog/fs_i6/fs-i6_pinout-fb7320fe.jpg" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/fs-i6_pinout-fb7320fe.jpg' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We need to cut the power line between the PCB and the radio module. Right here.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 49.26470588235294%;'&gt;&lt;a id="assets-images-blog-fs-i-fs-i-pinout-cut-ee-b-jpg" href="/assets/images/blog/fs_i6/fs-i6_pinout-cut-45ee607b.jpg" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/fs-i6_pinout-cut-45ee607b.jpg' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Take a new razor blade and make a cut as shown above. Once you&amp;#39;ve made the cut, check the continuity between the solder points on each side. Here&amp;#39;s what it looks like when we&amp;#39;re done.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-three-quarters-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 66.44951140065146%;'&gt;&lt;a id="assets-images-blog-fs-i-DSC-JPG" href="/assets/images/blog/fs_i6/DSC03395.JPG" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/DSC03395_prev.JPG' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now take the leads from the switch and wire the green wire (middle wire) to the solder blob on the 3.3v output.&lt;/p&gt;

&lt;p&gt;Solder one side of the switch to the internal radio module.&lt;/p&gt;

&lt;p&gt;Solder the other side to the DIY module power.&lt;/p&gt;

&lt;p&gt;Before we re-assemble, let&amp;#39;s program the DIY module with our configured code.&lt;/p&gt;

&lt;h4 id="diy-tx-module-programming"&gt;DIY TX Module Programming&lt;/h4&gt;

&lt;p&gt;You can program the 
Note that your USBASP programmer should have two voltage settings. BE SURE TO USE THE 3.3v SETTING!&lt;/p&gt;

&lt;p&gt;To program the module connect your &lt;a href="http://www.banggood.com/USBASP-USBISP-3_3-5V-AVR-Downloader-Programmer-With-ATMEGA8-ATMEGA128-p-934425.html?p=1G09211226617201502J"&gt;USBASP&lt;/a&gt; like so, if you installed the headers on the back like I did in the section above.&lt;/p&gt;

&lt;div class='ratio-box-resizer img-quarter-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 190.2555910543131%;'&gt;&lt;a id="assets-images-blog-fs-i-in-isp-a-cde-a-jpg" href="/assets/images/blog/fs_i6/4-in-1-isp-a63cde8a.jpg" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/4-in-1-isp-a63cde8a.jpg' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class='ratio-box-resizer img-half-width'&gt;&lt;div class='ratio-box' style='padding-bottom: 96.98630136986301%;'&gt;&lt;a id="assets-images-blog-fs-i-usb-asp-pinout-ee-e-png" href="/assets/images/blog/fs_i6/usb-asp-pinout-3ee427e9.png" class="linked-img colorbox"&gt;&lt;img src='/assets/images/blog/fs_i6/usb-asp-pinout-3ee427e9.png' class='trailing-space' &gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Connect each pin to it&amp;#39;s counterpart, MISO to MISO, MOSI to MOSI and so on.&lt;/p&gt;

&lt;p&gt;Now that you&amp;#39;ve got the module connected to your USBASP, &lt;a href="https://github.com/pascallanger/DIY-Multiprotocol-TX-Module/releases"&gt;download the code from github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Edit the &lt;a href="https://gist.github.com/nathantsoi/a65b7baff0e044af05f6854e799c5fc5"&gt;_Config.h&lt;/a&gt; file or &lt;a href="https://gist.github.com/nathantsoi/a65b7baff0e044af05f6854e799c5fc5"&gt;use mine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Turn on verbose logging in the Arduino studio, build the firmware and copy out the firmware build command.&lt;/p&gt;

&lt;p&gt;Change the adapter (-c) to usbasp and flash in a terminal:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;› /Applications/Arduino.app/Contents/Java/hardware/tools/avr/bin/avrdude -C/Applications/Arduino.app/Contents/Java/hardware/tools/avr/etc/avrdude.conf -v -patmega328p -cusbasp -D -Uflash:w:/var/folders/jc/xx5l7d_j63n6fy575yt6l2r00000gn/T/build39d13a724d817953cbd2b39be187c91c.tmp/Multiprotocol.ino.hex:i

avrdude: Version 6.0.1, compiled on Apr 14 2015 at 16:30:25
         Copyright (c) 2000-2005 Brian Dean, http://www.bdmicro.com/
         Copyright (c) 2007-2009 Joerg Wunsch

         System wide configuration file is "/Applications/Arduino.app/Contents/Java/hardware/tools/avr/etc/avrdude.conf"
         User configuration file is "/Users/ntsoi/.avrduderc"
         User configuration file does not exist or is not a regular file, skipping

         Using Port                    : usb
         Using Programmer              : usbasp
         AVR Part                      : ATmega328P
         Chip Erase delay              : 9000 us
         PAGEL                         : PD7
         BS2                           : PC2
         RESET disposition             : dedicated
         RETRY pulse                   : SCK
         serial program mode           : yes
         parallel program mode         : yes
         Timeout                       : 200
         StabDelay                     : 100
         CmdexeDelay                   : 25
         SyncLoops                     : 32
         ByteDelay                     : 0
         PollIndex                     : 3
         PollValue                     : 0x53
         Memory Detail                 :

                                  Block Poll               Page                       Polled
           Memory Type Mode Delay Size  Indx Paged  Size   Size #Pages MinW  MaxW   ReadBack
           ----------- ---- ----- ----- ---- ------ ------ ---- ------ ----- ----- ---------
           eeprom        65    20     4    0 no       1024    4      0  3600  3600 0xff 0xff
           flash         65     6   128    0 yes     32768  128    256  4500  4500 0xff 0xff
           lfuse          0     0     0    0 no          1    0      0  4500  4500 0x00 0x00
           hfuse          0     0     0    0 no          1    0      0  4500  4500 0x00 0x00
           efuse          0     0     0    0 no          1    0      0  4500  4500 0x00 0x00
           lock           0     0     0    0 no          1    0      0  4500  4500 0x00 0x00
           calibration    0     0     0    0 no          1    0      0     0     0 0x00 0x00
           signature      0     0     0    0 no          3    0      0     0     0 0x00 0x00

         Programmer Type : usbasp
         Description     : USBasp, http://www.fischl.de/usbasp/

avrdude: auto set sck period (because given equals null)
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e950f
avrdude: safemode: lfuse reads as FF
avrdude: safemode: hfuse reads as DA
avrdude: safemode: efuse reads as 7
avrdude: reading input file "/var/folders/jc/xx5l7d_j63n6fy575yt6l2r00000gn/T/build39d13a724d817953cbd2b39be187c91c.tmp/Multiprotocol.ino.hex"
avrdude: writing flash (19048 bytes):

Writing | ################################################## | 100% 13.28s

avrdude: 19048 bytes of flash written
avrdude: verifying flash memory against /var/folders/jc/xx5l7d_j63n6fy575yt6l2r00000gn/T/build39d13a724d817953cbd2b39be187c91c.tmp/Multiprotocol.ino.hex:
avrdude: load data flash data from input file /var/folders/jc/xx5l7d_j63n6fy575yt6l2r00000gn/T/build39d13a724d817953cbd2b39be187c91c.tmp/Multiprotocol.ino.hex:
avrdude: input file /var/folders/jc/xx5l7d_j63n6fy575yt6l2r00000gn/T/build39d13a724d817953cbd2b39be187c91c.tmp/Multiprotocol.ino.hex contains 19048 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 7.50s

avrdude: verifying ...
avrdude: verification error, first mismatch at byte 0x0002
         0x04 != 0x4c
avrdude: verification error; content mismatch

avrdude: safemode: lfuse reads as FF
avrdude: safemode: hfuse reads as DA
avrdude: safemode: efuse reads as 7
avrdude: safemode: Fuses OK (H:07, E:DA, L:FF)

avrdude done.  Thank you.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="binding"&gt;Binding&lt;/h3&gt;

&lt;p&gt;I have configured my module such that the dial should be turned to the following value for each protocol:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//  Dial    Protocol        Sub protocol    RX_Num  Power       Auto Bind       Option
/*  1 */  {MODE_FLYSKY, Flysky    , 0  , P_HIGH, NO_AUTOBIND, 0    },
/*  2 */  {MODE_FRSKY , 0         , 0  , P_HIGH, NO_AUTOBIND, 0xD7 },  // D7 fine tuning
/*  3 */  {MODE_FRSKYX, CH_8      , 0  , P_HIGH, NO_AUTOBIND, 0xD7 },  // D7 fine tuning
/*  4 */  {MODE_FRSKYX, CH_16     , 0  , P_HIGH, NO_AUTOBIND, 0xD7 },  // D7 fine tuning
/*  5 */  {MODE_DSM2  , DSM2      , 0  , P_HIGH, NO_AUTOBIND, 6    },  // 6 channels @ 11ms
/*  6 */  {MODE_DSM2  , DSMX      , 0  , P_HIGH, NO_AUTOBIND, 6    },  // 6 channels @ 11ms
/*  7 */  {MODE_CX10  , CX10_GREEN, 0  , P_HIGH, NO_AUTOBIND, 0    },
/*  8 */  {MODE_BAYANG, 0         , 0  , P_HIGH, NO_AUTOBIND, 0    },
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>BetaFlight Spektrum Satellite Receiver Guide</title>
    <link rel="alternate" href="http://nathan.vertile.com/blog/2016/07/09/betaflight-spektrum-satellite-receiver-guide/"/>
    <id>http://nathan.vertile.com/blog/2016/07/09/betaflight-spektrum-satellite-receiver-guide/</id>
    <published>2016-07-08T21:56:00-07:00</published>
    <updated>2016-07-08T21:56:53-07:00</updated>
    <author>
      <name>Nathan Tsoi</name>
    </author>
    <content type="html"></content>
  </entry>
</feed>
